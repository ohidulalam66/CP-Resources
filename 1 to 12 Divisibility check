
#include<bits/stdc++.h>
using  namespace  std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>

#define faster  ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

#define sq(x)   (x)*(x)
#define PI      acos(-1.0)
#define all(x) x.begin(),x.end()
#define nl      '\n'
 #define mod 1000000007
typedef long long int ll;
typedef unsigned long long int  llu;

bool two(string s)
{
    int x=s[s.size()-1]-'0';

    if(x&1)
        return false;
    else return true;
}

bool three(string s)
{
    ll sum=0;
    for(int i=0; i<s.size(); i++)
    {
        int x=s[i]-'0';
        sum+=x;
    }

    if(sum%3!=0)
        return false;
    else return true;
}

bool four(string s)
{
    int sz=s.size();
    if(sz==1)
    {
        int x=s[0]-'0';
        if(x%4==0)
            return true;
        else return false;
    }

    else
    {
        ll ans=s[sz-1]+s[sz-2]*10;

        if(ans%4==0)
            return true;
        else return false;
    }
}


bool five(string s)
{
    if(s[s.size()-1]=='0' || s[s.size()-1]=='5')
        return true;
    else return false;
}


bool six(string s)
{
    if(two(s) && three(s))
        return true;
    else return false;
}

bool seven(string s)
{
    int sum=0;
    for(int i=0;i<s.size();i++)
    {
        sum=sum*10 + s[i]-'0';
        sum%=7;
    }
    if(sum==0)return true;
    return false;
}

bool eight(string s)
{
    int sz=s.size();
    if(sz==1)
    {
        int x=s[0]-'0';
        if(x%8==0)
            return true;
        else return false;
    }

    else if(sz==2)
    {
        ll ans=s[sz-1]+s[sz-2]*10;

        if(ans%8==0)
            return true;
        else return false;
    }

    else
    {
        ll ans=s[sz-1]+s[sz-2]*10+s[sz-3]*100;

        if(ans%8==0)
            return true;
        else return false;
    }
}


bool nine(string s)
{
    ll sum=0;
    for(int i=0; i<s.size(); i++)
    {
        int x=s[i]-'0';
        sum+=x;
    }

    if(sum%9!=0)
        return false;
    else return true;
}


bool ten(string s)
{
    int sz=s.size();
    if(s[sz-1]=='0')
        return true;
    else return false;
}

bool eleven(string s)
{
    ll sum=0;
    for(int i=0; i<s.size(); i++)
    {
        int x=s[i]-'0';
        if(i&1)
            sum-=x;
        else sum+=x;
    }

    sum=abs(sum);

    if(sum==0  || sum%11==0)
        return true;
    else return false;
}

bool twelve(string s)
{
    if(three(s) && four(s))
        return true;
    else return false;
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        int n;
        cin>>n;

        int i,ans=0,x;
        for(i=0;i<n;i++)
        {
            cin>>x;
            if(x==2 && two(s)==false)ans=1;
            else if(x==3 && !three(s))ans=1;
            else if(x==4 && !four(s))ans=1;
            else if(x==5 && !five(s))ans=1;
            else if(x==6 && !six(s))ans=1;
            else if(x==7 && !seven(s))ans=1;
            else if(x==8 && !eight(s))ans=1;
            else if(x==9 && !nine(s))ans=1;
            else if(x==10 && !ten(s))ans=1;
            else if(x==11 && !eleven(s))ans=1;
            else if(x==12 && !twelve(s))ans=1;
        }
        if(s=="0")
        {
            cout<<s<<" - Wonderful."<<nl;
            //continue;
        }
        else if(ans==0)cout<<s<<" - Wonderful."<<nl;
        else cout<<s<<" - Simple."<<nl;
    }
    return 0;

}
